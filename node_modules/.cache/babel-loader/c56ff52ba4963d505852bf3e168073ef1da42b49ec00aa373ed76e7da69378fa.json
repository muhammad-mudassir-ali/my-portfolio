{"ast":null,"code":"import _objectSpread from\"C:/Users/MUDASSIR/OneDrive/Desktop/my-prortfolio/my-prortfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/MUDASSIR/OneDrive/Desktop/my-prortfolio/my-prortfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"className\"];/**\n * @license lucide-react v0.546.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */import{forwardRef,createElement}from'react';import{mergeClasses,toKebabCase,toPascalCase}from'./shared/src/utils.js';import Icon from'./Icon.js';const createLucideIcon=(iconName,iconNode)=>{const Component=/*#__PURE__*/forwardRef((_ref,ref)=>{let{className}=_ref,props=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/createElement(Icon,_objectSpread({ref,iconNode,className:mergeClasses(\"lucide-\".concat(toKebabCase(toPascalCase(iconName))),\"lucide-\".concat(iconName),className)},props));});Component.displayName=toPascalCase(iconName);return Component;};export{createLucideIcon as default};","map":{"version":3,"names":["createLucideIcon","iconName","iconNode","Component","forwardRef","_ref","ref","className","props","_objectWithoutProperties","_excluded","createElement","Icon","_objectSpread","mergeClasses","concat","toKebabCase","toPascalCase","displayName"],"sources":["C:\\Users\\MUDASSIR\\OneDrive\\Desktop\\my-prortfolio\\my-prortfolio\\src\\node_modules\\lucide-react\\src\\createLucideIcon.ts"],"sourcesContent":["import { createElement, forwardRef } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from '@lucide/shared';\nimport { IconNode, LucideProps } from './types';\nimport Icon from './Icon';\n\n/**\n * Create a Lucide icon component\n * @param {string} iconName\n * @param {array} iconNode\n * @returns {ForwardRefExoticComponent} LucideIcon\n */\nconst createLucideIcon = (iconName: string, iconNode: IconNode) => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(({ className, ...props }, ref) =>\n    createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className,\n      ),\n      ...props,\n    }),\n  );\n\n  Component.displayName = toPascalCase(iconName);\n\n  return Component;\n};\n\nexport default createLucideIcon;\n"],"mappings":";;;;;oJAWA,KAAM,CAAAA,gBAAA,CAAmBA,CAACC,QAAA,CAAkBC,QAAA,GAAuB,CACjE,KAAM,CAAAC,SAAA,cAAYC,UAAA,CAAuC,CAAAC,IAAA,CAA0BC,GAAA,OAAzB,CAAEC,SAAc,CAAM,CAAAF,IAAA,CAANG,KAAA,CAAAC,wBAAA,CAAAJ,IAAA,CAAAK,SAAA,qBACxEC,aAAA,CAAcC,IAAA,CAAAC,aAAA,EACZP,GAAA,CACAJ,QAAA,CACAK,SAAA,CAAWO,YAAA,WAAAC,MAAA,CACCC,WAAA,CAAYC,YAAA,CAAahB,QAAQ,CAAC,CAAC,YAAAc,MAAA,CACnCd,QAAQ,EAClBM,SAAA,CACF,EACGC,KAAA,CACJ,IACH,CAEAL,SAAA,CAAUe,WAAA,CAAcD,YAAA,CAAahB,QAAQ,EAE7C,MAAO,CAAAE,SAAA,CACT,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}